name: antimony

services:
  traefik:
    image: traefik:v3.4.1
    restart: unless-stopped
    container_name: traefik
    network_mode: host
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # HTTP -> HTTPS redirect
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

      # ACME / Let's Encrypt config
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=antimony@ost.ch"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"

      # Self-signed fallback
      - "--entrypoints.websecure.forwardedHeaders.insecure=true"
      - "--serversTransport.insecureSkipVerify=true"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"

    depends_on:
     - server
     - interface

  database:
    container_name: database
    image: postgres
    restart: always
    shm_size: 128mb
    network_mode: host
    environment:
      - POSTGRES_PASSWORD=postgres
      - SB_DATABASE_PASSWORD=antimony
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 3s
      retries: 10
    volumes:
      - ./.db:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d/

  interface:
    container_name: interface
    image: ghcr.io/antimony-team/antimony-interface:latest
    depends_on:
      - server
    network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.interface.rule=PathPrefix(`/`)"
      - "traefik.http.routers.interface.entrypoints=websecure"
      - "traefik.http.routers.interface.tls.certresolver=letsencrypt"
      - "traefik.http.routers.interface.service=interface"
      # - "traefik.http.routers.interface.tls.domains[0].main=example.com"
      - "traefik.http.services.interface.loadbalancer.server.port=8100"
      - "traefik.http.services.interface.loadbalancer.server.scheme=http"

  server:
    container_name: server
    image: ghcr.io/antimony-team/antimony-backend:latest
    environment:
      - SB_NATIVE_USERNAME=admin
      - SB_NATIVE_PASSWORD=admin
      - SB_DATABASE_PASSWORD=antimony
    privileged: true
    network_mode: host
    command: -config=./config.yml
    volumes:
      - ./config.yml:/app/config.yml
      - ./mnt/db:/app/db
      - ./mnt/storage:/app/storage/
      - ./mnt/run:/app/run/
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      database:
        condition: service_healthy
    labels:
      # Server /socket.io route
      - "traefik.enable=true"
      - "traefik.http.routers.server-socket.rule=PathPrefix(`/socket.io`)"
      - "traefik.http.routers.server-socket.entrypoints=websecure"
      - "traefik.http.routers.server-socket.tls.certresolver=letsencrypt"
      - "traefik.http.routers.server-socket.service=server-socket"
      # - "traefik.http.routers.server-socket.tls.domains[0].main=example.com"
      - "traefik.http.services.server-socket.loadbalancer.server.port=3000"
      - "traefik.http.services.server-socket.loadbalancer.server.scheme=http"

      # WebSocket support
      - "traefik.http.middlewares.socketio-headers.headers.customrequestheaders.Connection=Upgrade"
      - "traefik.http.middlewares.socketio-headers.headers.customrequestheaders.Upgrade=websocket"

      # Attach middleware
      - "traefik.http.routers.server-socket.middlewares=socketio-headers"

      # Server /api route
      - "traefik.http.routers.server-api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.server-api.entrypoints=websecure"
      - "traefik.http.routers.server-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.server-api.service=server-api"
      - "traefik.http.routers.server-api.middlewares=api-strip-prefix"
      # - "traefik.http.routers.server-api.tls.domains[0].main=example.com"
      - "traefik.http.services.server-api.loadbalancer.server.port=3000"
      - "traefik.http.services.server-api.loadbalancer.server.scheme=http"

      - "traefik.http.middlewares.api-strip-prefix.stripprefix.prefixes=/api"
